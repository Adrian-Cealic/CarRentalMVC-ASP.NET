@model Domain.Car

@{
    ViewBag.Title = "Add New Car";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container mt-5">
    <h2>@ViewBag.Title</h2>
    <hr />

    @using (Html.BeginForm("AddCar", "Home", FormMethod.Post, new { @class = "needs-validation", novalidate = "", enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="card shadow-sm">
            <div class="card-header">
                <h4>Car Details</h4>
            </div>
            <div class="card-body">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="row mb-3">
                    @Html.LabelFor(model => model.Make, htmlAttributes: new { @class = "col-md-2 col-form-label" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Make, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                        @Html.ValidationMessageFor(model => model.Make, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row mb-3">
                    @Html.LabelFor(model => model.Model, htmlAttributes: new { @class = "col-md-2 col-form-label" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Model, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                        @Html.ValidationMessageFor(model => model.Model, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row mb-3">
                    @Html.LabelFor(model => model.Year, htmlAttributes: new { @class = "col-md-2 col-form-label" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Year, new { htmlAttributes = new { @class = "form-control", type = "number", required = "required" } })
                        @Html.ValidationMessageFor(model => model.Year, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row mb-3">
                    @Html.LabelFor(model => model.PricePerDay, htmlAttributes: new { @class = "col-md-2 col-form-label" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PricePerDay, new { htmlAttributes = new { @class = "form-control", type = "number", step = "0.01", required = "required" } })
                        @Html.ValidationMessageFor(model => model.PricePerDay, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row mb-3">
                    @Html.LabelFor(model => model.ImageUrl, htmlAttributes: new { @class = "col-md-2 col-form-label" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ImageUrl, new { htmlAttributes = new { @class = "form-control", type = "url" } })
                        @Html.ValidationMessageFor(model => model.ImageUrl, "", new { @class = "text-danger" })
                        <small class="form-text text-muted">Optional: URL to an image of the car.</small>
                    </div>
                </div>

                <div class="row mb-3">
                    <div class="col-md-10 offset-md-2">
                        <div class="form-check">
                            @Html.CheckBoxFor(model => model.IsAvailable, new { @class = "form-check-input" })
                            @Html.LabelFor(model => model.IsAvailable, htmlAttributes: new { @class = "form-check-label" })
                        </div>
                        @Html.ValidationMessageFor(model => model.IsAvailable, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>
            <div class="card-footer text-end">
                @Html.ActionLink("Cancel", "ManageCars", null, new { @class = "btn btn-secondary me-2" })
                <input type="submit" value="Add Car" class="btn btn-primary" />
            </div>
        </div>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        // Basic client-side validation enabling
        (function () {
            'use strict';
            window.addEventListener('load', function () {
                var forms = document.getElementsByClassName('needs-validation');
                Array.prototype.filter.call(forms, function (form) {
                    form.addEventListener('submit', function (event) {
                        if (form.checkValidity() === false) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                        form.classList.add('was-validated');
                    }, false);
                });
            }, false);
        })();
    </script>
} 